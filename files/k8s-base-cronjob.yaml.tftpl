apiVersion: batch/v1
kind: CronJob
metadata:
  %{~ if length(coalesce(labels, {})) > 0 }
  labels:
  %{~ for lbl_key, lbl_value in coalesce(labels, {}) }
    ${lbl_key}: "${lbl_value}"
  %{~ endfor ~}
  %{~ endif ~}
  name: ${name}
  namespace: ${namespace}
spec:
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  suspend: ${suspend}
  schedule: "${schedule}"
  timeZone: "${timezone}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - /app/${script_name}
              %{~ if length(coalesce(additional_env, {})) > 0 }
              env:
              %{~ for env_key, env_value in coalesce(additional_env, {}) }
                - name: "${env_key}"
                  value: "${env_value}"
              %{~ endfor ~}
              %{~ endif ~}
              envFrom:
                - configMapRef:
                    name: ${config_map_app_env}
              image: ${image}
              imagePullPolicy: IfNotPresent
              name: ${name}
              resources:
                requests:
                  cpu: ${request_cpu}
                  memory: ${request_memory}
              volumeMounts:
                - name: app
                  mountPath: /app
          volumes:
            - name: app
              configMap:
                defaultMode: 493 # 0755 in octal = 493 in decimal
                name: ${config_map_app}
          serviceAccountName: ${service_account}
          restartPolicy: Never
          %{~ if length(node_affinity_match_expressions) > 0 }
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    %{~ for node_affinity_match_expression in node_affinity_match_expressions }
                    - key: ${node_affinity_match_expression.key}
                      operator: ${node_affinity_match_expression.operator}
                      values:
                        %{~ for value in node_affinity_match_expression.values }
                        - ${value}
                        %{~ endfor ~}
                    %{~ endfor ~}
              preferredDuringSchedulingIgnoredDuringExecution:
                %{~ for index, node_affinity_match_expression in node_affinity_match_expressions }
                - weight: ${index + 1}
                  preference:
                    matchExpressions:
                    - key: ${node_affinity_match_expression.key}
                      operator: ${node_affinity_match_expression.operator}
                      values:
                        %{~ for value in node_affinity_match_expression.values }
                        - ${value}
                        %{~ endfor ~}
                %{~ endfor ~}
          %{~ endif ~}
          %{~ if length(tolerations) > 0 }
          tolerations:
            %{~ for toleration in tolerations }
            - key: ${toleration.key}
              operator: ${toleration.operator}
              %{~ if toleration.value != null }
              value: ${toleration.value}
              %{~ endif ~}
              %{~ if toleration.effect != null }
              effect: ${toleration.effect}
              %{~ endif ~}
            %{~ endfor ~}
          %{~ endif ~}
